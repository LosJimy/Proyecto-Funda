
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSnonassocEQUALSLTGTLEGEASSIGN DIVIDE ELSE EQUALS FALSE FLOAT GE GT ID IF LE LPAREN LT MINUS MULTIPLY NUMBER PLUS PRINT RPAREN STRING TRUEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | if_statement\n                 | print_statementassignment : ID ASSIGN expressionif_statement : IF condition statement ELSE statement\n                    | IF condition statementprint_statement : PRINT LPAREN expression RPARENcondition : expression EQUALS expression\n                 | expression LT expression\n                 | expression GT expression\n                 | expression LE expression\n                 | expression GE expressionexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : IDexpression : TRUEexpression : FALSEexpression : NUMBER\n                  | FLOATexpression : STRING'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,],[7,7,-3,-4,-5,-6,16,-2,16,7,16,16,-22,-23,-24,-25,-26,-27,16,-7,-9,16,16,16,16,16,16,16,16,16,-16,7,-11,-12,-13,-14,-15,-17,-18,-19,-20,-21,-10,-8,]),'IF':([0,2,3,4,5,6,10,12,16,17,18,19,20,21,23,24,34,37,38,39,40,41,42,43,44,45,46,47,48,49,],[8,8,-3,-4,-5,-6,-2,8,-22,-23,-24,-25,-26,-27,-7,-9,-16,8,-11,-12,-13,-14,-15,-17,-18,-19,-20,-21,-10,-8,]),'PRINT':([0,2,3,4,5,6,10,12,16,17,18,19,20,21,23,24,34,37,38,39,40,41,42,43,44,45,46,47,48,49,],[9,9,-3,-4,-5,-6,-2,9,-22,-23,-24,-25,-26,-27,-7,-9,-16,9,-11,-12,-13,-14,-15,-17,-18,-19,-20,-21,-10,-8,]),'$end':([1,2,3,4,5,6,10,16,17,18,19,20,21,23,24,34,43,44,45,46,47,48,49,],[0,-1,-3,-4,-5,-6,-2,-22,-23,-24,-25,-26,-27,-7,-9,-16,-17,-18,-19,-20,-21,-10,-8,]),'ELSE':([4,5,6,16,17,18,19,20,21,23,24,34,43,44,45,46,47,48,49,],[-4,-5,-6,-22,-23,-24,-25,-26,-27,-7,37,-16,-17,-18,-19,-20,-21,-10,-8,]),'ASSIGN':([7,],[11,]),'MINUS':([8,11,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,],[14,14,31,14,14,-22,-23,-24,-25,-26,-27,14,31,14,14,14,14,14,14,14,14,14,-16,31,31,31,31,31,31,31,-17,-18,-19,-20,-21,]),'LPAREN':([8,9,11,14,15,22,25,26,27,28,29,30,31,32,33,],[15,22,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'TRUE':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'FALSE':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'FLOAT':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'STRING':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'EQUALS':([13,16,17,18,19,20,21,34,43,44,45,46,47,],[25,-22,-23,-24,-25,-26,-27,-16,-17,-18,-19,-20,-21,]),'LT':([13,16,17,18,19,20,21,34,43,44,45,46,47,],[26,-22,-23,-24,-25,-26,-27,-16,-17,-18,-19,-20,-21,]),'GT':([13,16,17,18,19,20,21,34,43,44,45,46,47,],[27,-22,-23,-24,-25,-26,-27,-16,-17,-18,-19,-20,-21,]),'LE':([13,16,17,18,19,20,21,34,43,44,45,46,47,],[28,-22,-23,-24,-25,-26,-27,-16,-17,-18,-19,-20,-21,]),'GE':([13,16,17,18,19,20,21,34,43,44,45,46,47,],[29,-22,-23,-24,-25,-26,-27,-16,-17,-18,-19,-20,-21,]),'PLUS':([13,16,17,18,19,20,21,23,34,35,36,38,39,40,41,42,43,44,45,46,47,],[30,-22,-23,-24,-25,-26,-27,30,-16,30,30,30,30,30,30,30,-17,-18,-19,-20,-21,]),'MULTIPLY':([13,16,17,18,19,20,21,23,34,35,36,38,39,40,41,42,43,44,45,46,47,],[32,-22,-23,-24,-25,-26,-27,32,-16,32,32,32,32,32,32,32,32,32,-19,-20,-21,]),'DIVIDE':([13,16,17,18,19,20,21,23,34,35,36,38,39,40,41,42,43,44,45,46,47,],[33,-22,-23,-24,-25,-26,-27,33,-16,33,33,33,33,33,33,33,33,33,-19,-20,-21,]),'RPAREN':([16,17,18,19,20,21,34,35,36,43,44,45,46,47,],[-22,-23,-24,-25,-26,-27,-16,47,48,-17,-18,-19,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,12,37,],[3,10,24,49,]),'assignment':([0,2,12,37,],[4,4,4,4,]),'if_statement':([0,2,12,37,],[5,5,5,5,]),'print_statement':([0,2,12,37,],[6,6,6,6,]),'condition':([8,],[12,]),'expression':([8,11,14,15,22,25,26,27,28,29,30,31,32,33,],[13,23,34,35,36,38,39,40,41,42,43,44,45,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',14),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',19),
  ('statement -> assignment','statement',1,'p_statement','parser.py',26),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',27),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',28),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',32),
  ('if_statement -> IF condition statement ELSE statement','if_statement',5,'p_if_statement','parser.py',37),
  ('if_statement -> IF condition statement','if_statement',3,'p_if_statement','parser.py',38),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','parser.py',45),
  ('condition -> expression EQUALS expression','condition',3,'p_condition','parser.py',51),
  ('condition -> expression LT expression','condition',3,'p_condition','parser.py',52),
  ('condition -> expression GT expression','condition',3,'p_condition','parser.py',53),
  ('condition -> expression LE expression','condition',3,'p_condition','parser.py',54),
  ('condition -> expression GE expression','condition',3,'p_condition','parser.py',55),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',68),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',72),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',73),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',74),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',75),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',86),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',90),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',98),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',102),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',106),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',107),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',111),
]
