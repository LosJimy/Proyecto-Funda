Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement_list statement
Rule 2     statement_list -> statement
Rule 3     statement -> expression
Rule 4     statement -> ID EQUALS expression
Rule 5     statement -> ID LPAREN STRING RPAREN
Rule 6     statement -> ID LPAREN ID RPAREN
Rule 7     statement -> IF expression LBRACE statement_list RBRACE
Rule 8     statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 9     statement -> END
Rule 10    expression -> LPAREN expression RPAREN
Rule 11    expression -> NUMBER
Rule 12    expression -> FLOAT
Rule 13    expression -> ID
Rule 14    expression -> MINUS expression
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression MULTIPLY expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression EQEQ expression
Rule 20    expression -> expression NE expression
Rule 21    expression -> expression LT expression
Rule 22    expression -> expression GT expression
Rule 23    expression -> expression LE expression
Rule 24    expression -> expression GE expression
Rule 25    expression -> STRING

Terminals, with rules where they appear

DIVIDE               : 18
ELSE                 : 8
END                  : 9
EQEQ                 : 19
EQUALS               : 4
FLOAT                : 12
GE                   : 24
GT                   : 22
ID                   : 4 5 6 6 13
IF                   : 7 8
LBRACE               : 7 8 8
LE                   : 23
LPAREN               : 5 6 10
LT                   : 21
MINUS                : 14 16
MULTIPLY             : 17
NE                   : 20
NUMBER               : 11
PLUS                 : 15
RBRACE               : 7 8 8
RPAREN               : 5 6 10
STRING               : 5 25
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 7 8 10 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24
statement            : 1 2
statement_list       : 1 7 8 8 0

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3

state 1

    (0) S' -> statement_list .
    (1) statement_list -> statement_list . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    statement                      shift and go to state 12
    expression                     shift and go to state 3

state 2

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement .)
    MINUS           reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 3

    (3) statement -> expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 3 (statement -> expression .)
    IF              reduce using rule 3 (statement -> expression .)
    END             reduce using rule 3 (statement -> expression .)
    LPAREN          reduce using rule 3 (statement -> expression .)
    NUMBER          reduce using rule 3 (statement -> expression .)
    FLOAT           reduce using rule 3 (statement -> expression .)
    STRING          reduce using rule 3 (statement -> expression .)
    $end            reduce using rule 3 (statement -> expression .)
    RBRACE          reduce using rule 3 (statement -> expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    EQEQ            shift and go to state 17
    NE              shift and go to state 18
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22

  ! MINUS           [ reduce using rule 3 (statement -> expression .) ]


state 4

    (4) statement -> ID . EQUALS expression
    (5) statement -> ID . LPAREN STRING RPAREN
    (6) statement -> ID . LPAREN ID RPAREN
    (13) expression -> ID .

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUALS          shift and go to state 23
    LPAREN          shift and go to state 24
    PLUS            reduce using rule 13 (expression -> ID .)
    MINUS           reduce using rule 13 (expression -> ID .)
    MULTIPLY        reduce using rule 13 (expression -> ID .)
    DIVIDE          reduce using rule 13 (expression -> ID .)
    EQEQ            reduce using rule 13 (expression -> ID .)
    NE              reduce using rule 13 (expression -> ID .)
    LT              reduce using rule 13 (expression -> ID .)
    GT              reduce using rule 13 (expression -> ID .)
    LE              reduce using rule 13 (expression -> ID .)
    GE              reduce using rule 13 (expression -> ID .)
    ID              reduce using rule 13 (expression -> ID .)
    IF              reduce using rule 13 (expression -> ID .)
    END             reduce using rule 13 (expression -> ID .)
    NUMBER          reduce using rule 13 (expression -> ID .)
    FLOAT           reduce using rule 13 (expression -> ID .)
    STRING          reduce using rule 13 (expression -> ID .)
    $end            reduce using rule 13 (expression -> ID .)
    RBRACE          reduce using rule 13 (expression -> ID .)

  ! LPAREN          [ reduce using rule 13 (expression -> ID .) ]


state 5

    (10) expression -> LPAREN . expression RPAREN
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 25

state 6

    (25) expression -> STRING .

    PLUS            reduce using rule 25 (expression -> STRING .)
    MINUS           reduce using rule 25 (expression -> STRING .)
    MULTIPLY        reduce using rule 25 (expression -> STRING .)
    DIVIDE          reduce using rule 25 (expression -> STRING .)
    EQEQ            reduce using rule 25 (expression -> STRING .)
    NE              reduce using rule 25 (expression -> STRING .)
    LT              reduce using rule 25 (expression -> STRING .)
    GT              reduce using rule 25 (expression -> STRING .)
    LE              reduce using rule 25 (expression -> STRING .)
    GE              reduce using rule 25 (expression -> STRING .)
    ID              reduce using rule 25 (expression -> STRING .)
    IF              reduce using rule 25 (expression -> STRING .)
    END             reduce using rule 25 (expression -> STRING .)
    LPAREN          reduce using rule 25 (expression -> STRING .)
    NUMBER          reduce using rule 25 (expression -> STRING .)
    FLOAT           reduce using rule 25 (expression -> STRING .)
    STRING          reduce using rule 25 (expression -> STRING .)
    $end            reduce using rule 25 (expression -> STRING .)
    RPAREN          reduce using rule 25 (expression -> STRING .)
    LBRACE          reduce using rule 25 (expression -> STRING .)
    RBRACE          reduce using rule 25 (expression -> STRING .)


state 7

    (7) statement -> IF . expression LBRACE statement_list RBRACE
    (8) statement -> IF . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 27

state 8

    (9) statement -> END .

    ID              reduce using rule 9 (statement -> END .)
    IF              reduce using rule 9 (statement -> END .)
    END             reduce using rule 9 (statement -> END .)
    LPAREN          reduce using rule 9 (statement -> END .)
    NUMBER          reduce using rule 9 (statement -> END .)
    FLOAT           reduce using rule 9 (statement -> END .)
    MINUS           reduce using rule 9 (statement -> END .)
    STRING          reduce using rule 9 (statement -> END .)
    $end            reduce using rule 9 (statement -> END .)
    RBRACE          reduce using rule 9 (statement -> END .)


state 9

    (11) expression -> NUMBER .

    PLUS            reduce using rule 11 (expression -> NUMBER .)
    MINUS           reduce using rule 11 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 11 (expression -> NUMBER .)
    DIVIDE          reduce using rule 11 (expression -> NUMBER .)
    EQEQ            reduce using rule 11 (expression -> NUMBER .)
    NE              reduce using rule 11 (expression -> NUMBER .)
    LT              reduce using rule 11 (expression -> NUMBER .)
    GT              reduce using rule 11 (expression -> NUMBER .)
    LE              reduce using rule 11 (expression -> NUMBER .)
    GE              reduce using rule 11 (expression -> NUMBER .)
    ID              reduce using rule 11 (expression -> NUMBER .)
    IF              reduce using rule 11 (expression -> NUMBER .)
    END             reduce using rule 11 (expression -> NUMBER .)
    LPAREN          reduce using rule 11 (expression -> NUMBER .)
    NUMBER          reduce using rule 11 (expression -> NUMBER .)
    FLOAT           reduce using rule 11 (expression -> NUMBER .)
    STRING          reduce using rule 11 (expression -> NUMBER .)
    $end            reduce using rule 11 (expression -> NUMBER .)
    RPAREN          reduce using rule 11 (expression -> NUMBER .)
    LBRACE          reduce using rule 11 (expression -> NUMBER .)
    RBRACE          reduce using rule 11 (expression -> NUMBER .)


state 10

    (12) expression -> FLOAT .

    PLUS            reduce using rule 12 (expression -> FLOAT .)
    MINUS           reduce using rule 12 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 12 (expression -> FLOAT .)
    DIVIDE          reduce using rule 12 (expression -> FLOAT .)
    EQEQ            reduce using rule 12 (expression -> FLOAT .)
    NE              reduce using rule 12 (expression -> FLOAT .)
    LT              reduce using rule 12 (expression -> FLOAT .)
    GT              reduce using rule 12 (expression -> FLOAT .)
    LE              reduce using rule 12 (expression -> FLOAT .)
    GE              reduce using rule 12 (expression -> FLOAT .)
    ID              reduce using rule 12 (expression -> FLOAT .)
    IF              reduce using rule 12 (expression -> FLOAT .)
    END             reduce using rule 12 (expression -> FLOAT .)
    LPAREN          reduce using rule 12 (expression -> FLOAT .)
    NUMBER          reduce using rule 12 (expression -> FLOAT .)
    FLOAT           reduce using rule 12 (expression -> FLOAT .)
    STRING          reduce using rule 12 (expression -> FLOAT .)
    $end            reduce using rule 12 (expression -> FLOAT .)
    RPAREN          reduce using rule 12 (expression -> FLOAT .)
    LBRACE          reduce using rule 12 (expression -> FLOAT .)
    RBRACE          reduce using rule 12 (expression -> FLOAT .)


state 11

    (14) expression -> MINUS . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 28

state 12

    (1) statement_list -> statement_list statement .

    ID              reduce using rule 1 (statement_list -> statement_list statement .)
    IF              reduce using rule 1 (statement_list -> statement_list statement .)
    END             reduce using rule 1 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 1 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 1 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 1 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 1 (statement_list -> statement_list statement .)
    STRING          reduce using rule 1 (statement_list -> statement_list statement .)
    $end            reduce using rule 1 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 1 (statement_list -> statement_list statement .)


state 13

    (15) expression -> expression PLUS . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 29

state 14

    (16) expression -> expression MINUS . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 30

state 15

    (17) expression -> expression MULTIPLY . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 31

state 16

    (18) expression -> expression DIVIDE . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 32

state 17

    (19) expression -> expression EQEQ . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 33

state 18

    (20) expression -> expression NE . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 34

state 19

    (21) expression -> expression LT . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 35

state 20

    (22) expression -> expression GT . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 36

state 21

    (23) expression -> expression LE . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 37

state 22

    (24) expression -> expression GE . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 38

state 23

    (4) statement -> ID EQUALS . expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    ID              shift and go to state 26
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 39

state 24

    (5) statement -> ID LPAREN . STRING RPAREN
    (6) statement -> ID LPAREN . ID RPAREN

    STRING          shift and go to state 41
    ID              shift and go to state 40


state 25

    (10) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    EQEQ            shift and go to state 17
    NE              shift and go to state 18
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22


state 26

    (13) expression -> ID .

    RPAREN          reduce using rule 13 (expression -> ID .)
    PLUS            reduce using rule 13 (expression -> ID .)
    MINUS           reduce using rule 13 (expression -> ID .)
    MULTIPLY        reduce using rule 13 (expression -> ID .)
    DIVIDE          reduce using rule 13 (expression -> ID .)
    EQEQ            reduce using rule 13 (expression -> ID .)
    NE              reduce using rule 13 (expression -> ID .)
    LT              reduce using rule 13 (expression -> ID .)
    GT              reduce using rule 13 (expression -> ID .)
    LE              reduce using rule 13 (expression -> ID .)
    GE              reduce using rule 13 (expression -> ID .)
    LBRACE          reduce using rule 13 (expression -> ID .)
    ID              reduce using rule 13 (expression -> ID .)
    IF              reduce using rule 13 (expression -> ID .)
    END             reduce using rule 13 (expression -> ID .)
    LPAREN          reduce using rule 13 (expression -> ID .)
    NUMBER          reduce using rule 13 (expression -> ID .)
    FLOAT           reduce using rule 13 (expression -> ID .)
    STRING          reduce using rule 13 (expression -> ID .)
    $end            reduce using rule 13 (expression -> ID .)
    RBRACE          reduce using rule 13 (expression -> ID .)


state 27

    (7) statement -> IF expression . LBRACE statement_list RBRACE
    (8) statement -> IF expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    LBRACE          shift and go to state 43
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    EQEQ            shift and go to state 17
    NE              shift and go to state 18
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22


state 28

    (14) expression -> MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    PLUS            reduce using rule 14 (expression -> MINUS expression .)
    MINUS           reduce using rule 14 (expression -> MINUS expression .)
    EQEQ            reduce using rule 14 (expression -> MINUS expression .)
    NE              reduce using rule 14 (expression -> MINUS expression .)
    LT              reduce using rule 14 (expression -> MINUS expression .)
    GT              reduce using rule 14 (expression -> MINUS expression .)
    LE              reduce using rule 14 (expression -> MINUS expression .)
    GE              reduce using rule 14 (expression -> MINUS expression .)
    ID              reduce using rule 14 (expression -> MINUS expression .)
    IF              reduce using rule 14 (expression -> MINUS expression .)
    END             reduce using rule 14 (expression -> MINUS expression .)
    LPAREN          reduce using rule 14 (expression -> MINUS expression .)
    NUMBER          reduce using rule 14 (expression -> MINUS expression .)
    FLOAT           reduce using rule 14 (expression -> MINUS expression .)
    STRING          reduce using rule 14 (expression -> MINUS expression .)
    $end            reduce using rule 14 (expression -> MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> MINUS expression .)
    LBRACE          reduce using rule 14 (expression -> MINUS expression .)
    RBRACE          reduce using rule 14 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! MULTIPLY        [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 29

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 15 (expression -> expression PLUS expression .)
    NE              reduce using rule 15 (expression -> expression PLUS expression .)
    LT              reduce using rule 15 (expression -> expression PLUS expression .)
    GT              reduce using rule 15 (expression -> expression PLUS expression .)
    LE              reduce using rule 15 (expression -> expression PLUS expression .)
    GE              reduce using rule 15 (expression -> expression PLUS expression .)
    ID              reduce using rule 15 (expression -> expression PLUS expression .)
    IF              reduce using rule 15 (expression -> expression PLUS expression .)
    END             reduce using rule 15 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 15 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 15 (expression -> expression PLUS expression .)
    STRING          reduce using rule 15 (expression -> expression PLUS expression .)
    $end            reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 15 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 15 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! MULTIPLY        [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 30

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 16 (expression -> expression MINUS expression .)
    NE              reduce using rule 16 (expression -> expression MINUS expression .)
    LT              reduce using rule 16 (expression -> expression MINUS expression .)
    GT              reduce using rule 16 (expression -> expression MINUS expression .)
    LE              reduce using rule 16 (expression -> expression MINUS expression .)
    GE              reduce using rule 16 (expression -> expression MINUS expression .)
    ID              reduce using rule 16 (expression -> expression MINUS expression .)
    IF              reduce using rule 16 (expression -> expression MINUS expression .)
    END             reduce using rule 16 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 16 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 16 (expression -> expression MINUS expression .)
    STRING          reduce using rule 16 (expression -> expression MINUS expression .)
    $end            reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 16 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 16 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! MULTIPLY        [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 31

    (17) expression -> expression MULTIPLY expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    PLUS            reduce using rule 17 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 17 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 17 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    EQEQ            reduce using rule 17 (expression -> expression MULTIPLY expression .)
    NE              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    GT              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    LE              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    GE              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    ID              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 17 (expression -> expression MULTIPLY expression .)
    END             reduce using rule 17 (expression -> expression MULTIPLY expression .)
    LPAREN          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    NUMBER          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    FLOAT           reduce using rule 17 (expression -> expression MULTIPLY expression .)
    STRING          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 17 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    LBRACE          reduce using rule 17 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 17 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! DIVIDE          [ shift and go to state 16 ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 32

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 18 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 18 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 18 (expression -> expression DIVIDE expression .)
    END             reduce using rule 18 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 18 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 18 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 18 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 18 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! DIVIDE          [ shift and go to state 16 ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 33

    (19) expression -> expression EQEQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 19 (expression -> expression EQEQ expression .)
    NE              reduce using rule 19 (expression -> expression EQEQ expression .)
    ID              reduce using rule 19 (expression -> expression EQEQ expression .)
    IF              reduce using rule 19 (expression -> expression EQEQ expression .)
    END             reduce using rule 19 (expression -> expression EQEQ expression .)
    LPAREN          reduce using rule 19 (expression -> expression EQEQ expression .)
    NUMBER          reduce using rule 19 (expression -> expression EQEQ expression .)
    FLOAT           reduce using rule 19 (expression -> expression EQEQ expression .)
    STRING          reduce using rule 19 (expression -> expression EQEQ expression .)
    $end            reduce using rule 19 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 19 (expression -> expression EQEQ expression .)
    LBRACE          reduce using rule 19 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 19 (expression -> expression EQEQ expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22

  ! PLUS            [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression EQEQ expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]


state 34

    (20) expression -> expression NE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 20 (expression -> expression NE expression .)
    NE              reduce using rule 20 (expression -> expression NE expression .)
    ID              reduce using rule 20 (expression -> expression NE expression .)
    IF              reduce using rule 20 (expression -> expression NE expression .)
    END             reduce using rule 20 (expression -> expression NE expression .)
    LPAREN          reduce using rule 20 (expression -> expression NE expression .)
    NUMBER          reduce using rule 20 (expression -> expression NE expression .)
    FLOAT           reduce using rule 20 (expression -> expression NE expression .)
    STRING          reduce using rule 20 (expression -> expression NE expression .)
    $end            reduce using rule 20 (expression -> expression NE expression .)
    RPAREN          reduce using rule 20 (expression -> expression NE expression .)
    LBRACE          reduce using rule 20 (expression -> expression NE expression .)
    RBRACE          reduce using rule 20 (expression -> expression NE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22

  ! PLUS            [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! MULTIPLY        [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression NE expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]


state 35

    (21) expression -> expression LT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 21 (expression -> expression LT expression .)
    NE              reduce using rule 21 (expression -> expression LT expression .)
    LT              reduce using rule 21 (expression -> expression LT expression .)
    GT              reduce using rule 21 (expression -> expression LT expression .)
    LE              reduce using rule 21 (expression -> expression LT expression .)
    GE              reduce using rule 21 (expression -> expression LT expression .)
    ID              reduce using rule 21 (expression -> expression LT expression .)
    IF              reduce using rule 21 (expression -> expression LT expression .)
    END             reduce using rule 21 (expression -> expression LT expression .)
    LPAREN          reduce using rule 21 (expression -> expression LT expression .)
    NUMBER          reduce using rule 21 (expression -> expression LT expression .)
    FLOAT           reduce using rule 21 (expression -> expression LT expression .)
    STRING          reduce using rule 21 (expression -> expression LT expression .)
    $end            reduce using rule 21 (expression -> expression LT expression .)
    RPAREN          reduce using rule 21 (expression -> expression LT expression .)
    LBRACE          reduce using rule 21 (expression -> expression LT expression .)
    RBRACE          reduce using rule 21 (expression -> expression LT expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! PLUS            [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 36

    (22) expression -> expression GT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 22 (expression -> expression GT expression .)
    NE              reduce using rule 22 (expression -> expression GT expression .)
    LT              reduce using rule 22 (expression -> expression GT expression .)
    GT              reduce using rule 22 (expression -> expression GT expression .)
    LE              reduce using rule 22 (expression -> expression GT expression .)
    GE              reduce using rule 22 (expression -> expression GT expression .)
    ID              reduce using rule 22 (expression -> expression GT expression .)
    IF              reduce using rule 22 (expression -> expression GT expression .)
    END             reduce using rule 22 (expression -> expression GT expression .)
    LPAREN          reduce using rule 22 (expression -> expression GT expression .)
    NUMBER          reduce using rule 22 (expression -> expression GT expression .)
    FLOAT           reduce using rule 22 (expression -> expression GT expression .)
    STRING          reduce using rule 22 (expression -> expression GT expression .)
    $end            reduce using rule 22 (expression -> expression GT expression .)
    RPAREN          reduce using rule 22 (expression -> expression GT expression .)
    LBRACE          reduce using rule 22 (expression -> expression GT expression .)
    RBRACE          reduce using rule 22 (expression -> expression GT expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! PLUS            [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 37

    (23) expression -> expression LE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 23 (expression -> expression LE expression .)
    NE              reduce using rule 23 (expression -> expression LE expression .)
    LT              reduce using rule 23 (expression -> expression LE expression .)
    GT              reduce using rule 23 (expression -> expression LE expression .)
    LE              reduce using rule 23 (expression -> expression LE expression .)
    GE              reduce using rule 23 (expression -> expression LE expression .)
    ID              reduce using rule 23 (expression -> expression LE expression .)
    IF              reduce using rule 23 (expression -> expression LE expression .)
    END             reduce using rule 23 (expression -> expression LE expression .)
    LPAREN          reduce using rule 23 (expression -> expression LE expression .)
    NUMBER          reduce using rule 23 (expression -> expression LE expression .)
    FLOAT           reduce using rule 23 (expression -> expression LE expression .)
    STRING          reduce using rule 23 (expression -> expression LE expression .)
    $end            reduce using rule 23 (expression -> expression LE expression .)
    RPAREN          reduce using rule 23 (expression -> expression LE expression .)
    LBRACE          reduce using rule 23 (expression -> expression LE expression .)
    RBRACE          reduce using rule 23 (expression -> expression LE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! PLUS            [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! MULTIPLY        [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 38

    (24) expression -> expression GE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

    EQEQ            reduce using rule 24 (expression -> expression GE expression .)
    NE              reduce using rule 24 (expression -> expression GE expression .)
    LT              reduce using rule 24 (expression -> expression GE expression .)
    GT              reduce using rule 24 (expression -> expression GE expression .)
    LE              reduce using rule 24 (expression -> expression GE expression .)
    GE              reduce using rule 24 (expression -> expression GE expression .)
    ID              reduce using rule 24 (expression -> expression GE expression .)
    IF              reduce using rule 24 (expression -> expression GE expression .)
    END             reduce using rule 24 (expression -> expression GE expression .)
    LPAREN          reduce using rule 24 (expression -> expression GE expression .)
    NUMBER          reduce using rule 24 (expression -> expression GE expression .)
    FLOAT           reduce using rule 24 (expression -> expression GE expression .)
    STRING          reduce using rule 24 (expression -> expression GE expression .)
    $end            reduce using rule 24 (expression -> expression GE expression .)
    RPAREN          reduce using rule 24 (expression -> expression GE expression .)
    LBRACE          reduce using rule 24 (expression -> expression GE expression .)
    RBRACE          reduce using rule 24 (expression -> expression GE expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16

  ! PLUS            [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! MULTIPLY        [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! EQEQ            [ shift and go to state 17 ]
  ! NE              [ shift and go to state 18 ]
  ! LT              [ shift and go to state 19 ]
  ! GT              [ shift and go to state 20 ]
  ! LE              [ shift and go to state 21 ]
  ! GE              [ shift and go to state 22 ]


state 39

    (4) statement -> ID EQUALS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . MULTIPLY expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . EQEQ expression
    (20) expression -> expression . NE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression

  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 4 (statement -> ID EQUALS expression .)
    IF              reduce using rule 4 (statement -> ID EQUALS expression .)
    END             reduce using rule 4 (statement -> ID EQUALS expression .)
    LPAREN          reduce using rule 4 (statement -> ID EQUALS expression .)
    NUMBER          reduce using rule 4 (statement -> ID EQUALS expression .)
    FLOAT           reduce using rule 4 (statement -> ID EQUALS expression .)
    STRING          reduce using rule 4 (statement -> ID EQUALS expression .)
    $end            reduce using rule 4 (statement -> ID EQUALS expression .)
    RBRACE          reduce using rule 4 (statement -> ID EQUALS expression .)
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    MULTIPLY        shift and go to state 15
    DIVIDE          shift and go to state 16
    EQEQ            shift and go to state 17
    NE              shift and go to state 18
    LT              shift and go to state 19
    GT              shift and go to state 20
    LE              shift and go to state 21
    GE              shift and go to state 22

  ! MINUS           [ reduce using rule 4 (statement -> ID EQUALS expression .) ]


state 40

    (6) statement -> ID LPAREN ID . RPAREN

    RPAREN          shift and go to state 44


state 41

    (5) statement -> ID LPAREN STRING . RPAREN

    RPAREN          shift and go to state 45


state 42

    (10) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)


state 43

    (7) statement -> IF expression LBRACE . statement_list RBRACE
    (8) statement -> IF expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 3
    statement_list                 shift and go to state 46
    statement                      shift and go to state 2

state 44

    (6) statement -> ID LPAREN ID RPAREN .

    ID              reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    IF              reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    END             reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    LPAREN          reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    NUMBER          reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    FLOAT           reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    MINUS           reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    STRING          reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    $end            reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)
    RBRACE          reduce using rule 6 (statement -> ID LPAREN ID RPAREN .)


state 45

    (5) statement -> ID LPAREN STRING RPAREN .

    ID              reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    IF              reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    END             reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    LPAREN          reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    NUMBER          reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    FLOAT           reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    MINUS           reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    STRING          reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    $end            reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)
    RBRACE          reduce using rule 5 (statement -> ID LPAREN STRING RPAREN .)


state 46

    (7) statement -> IF expression LBRACE statement_list . RBRACE
    (8) statement -> IF expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (1) statement_list -> statement_list . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    RBRACE          shift and go to state 47
    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 3
    statement                      shift and go to state 12

state 47

    (7) statement -> IF expression LBRACE statement_list RBRACE .
    (8) statement -> IF expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    END             reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    STRING          reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 7 (statement -> IF expression LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 48


state 48

    (8) statement -> IF expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 49


state 49

    (8) statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 3
    statement_list                 shift and go to state 50
    statement                      shift and go to state 2

state 50

    (8) statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (1) statement_list -> statement_list . statement
    (3) statement -> . expression
    (4) statement -> . ID EQUALS expression
    (5) statement -> . ID LPAREN STRING RPAREN
    (6) statement -> . ID LPAREN ID RPAREN
    (7) statement -> . IF expression LBRACE statement_list RBRACE
    (8) statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (9) statement -> . END
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . FLOAT
    (13) expression -> . ID
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression MULTIPLY expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression EQEQ expression
    (20) expression -> . expression NE expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . STRING

    RBRACE          shift and go to state 51
    ID              shift and go to state 4
    IF              shift and go to state 7
    END             shift and go to state 8
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 9
    FLOAT           shift and go to state 10
    MINUS           shift and go to state 11
    STRING          shift and go to state 6

    expression                     shift and go to state 3
    statement                      shift and go to state 12

state 51

    (8) statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    END             reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRING          reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 8 (statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 3 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
