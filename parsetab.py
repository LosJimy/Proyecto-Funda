
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTleftPLUSMINUSleftMULTIPLYDIVIDEMODULOrightUMINUSnonassocEQUALSLTGTLEGEAND ASSIGN BREAK COLON COMMA DEF DIVIDE ELIF ELSE EQUALS FALSE FLOAT FOR GE GT ID IF IN LE LPAREN LT MINUS MINUSEQUALS MODULO MULTIPLY NOT NUMBER OR PLUS PLUSEQUALS PRINT RANGE RETURN RPAREN STRING TRUE WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | if_statement\n                 | for_statement\n                 | while_statement\n                 | print_statement\n                 | function_def\n                 | function_call\n                 | return_statement\n                 | break_statementbreak_statement : BREAKassignment : ID ASSIGN expression\n                  | ID PLUSEQUALS expression\n                  | ID MINUSEQUALS expressionif_statement : IF condition COLON statement elif_list_opt ELSE statement\n                    | IF condition COLON statement elif_list_optelif_list_opt : elif_list\n                     | emptyelif_list : elif_list ELIF condition COLON statement\n                 | ELIF condition COLON statementfor_statement : FOR ID IN range statementwhile_statement : WHILE condition statementrange : RANGE LPAREN expression COMMA expression RPARENprint_statement : PRINT LPAREN expression RPARENfunction_def : DEF ID LPAREN param_list RPAREN COLON statement_listfunction_call : ID LPAREN arg_list RPARENreturn_statement : RETURN expressionparam_list : param_list COMMA ID\n                  | ID\n                  | emptyarg_list : arg_list COMMA expression\n                | expression\n                | emptycondition : expression EQUALS expression\n                 | expression LT expression\n                 | expression GT expression\n                 | expression LE expression\n                 | expression GEexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression MODULO expression\n                  | expression OR expression\n                  | expression AND expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : IDexpression : TRUEexpression : FALSEexpression : NUMBER\n                  | FLOATexpression : STRINGempty :'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,38,39,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,93,94,95,97,98,99,102,104,106,107,108,109,110,112,113,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,31,37,31,40,31,-13,-2,31,31,31,31,31,31,31,-51,-52,-53,-54,-55,-56,13,31,-29,-14,-15,-16,13,31,31,31,31,-40,31,31,31,31,31,31,31,-41,-49,-24,86,-28,31,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,13,-26,-18,-19,-20,31,-23,31,103,13,31,13,-17,13,31,13,13,-22,-21,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,14,-29,-14,-15,-16,14,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,14,-26,-18,-19,-20,-23,14,14,-17,14,14,14,-22,-21,-25,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,15,-29,-14,-15,-16,15,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,15,-26,-18,-19,-20,-23,15,15,-17,15,15,15,-22,-21,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,16,-29,-14,-15,-16,16,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,16,-26,-18,-19,-20,-23,16,16,-17,16,16,16,-22,-21,-25,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,17,-29,-14,-15,-16,17,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,17,-26,-18,-19,-20,-23,17,17,-17,17,17,17,-22,-21,-25,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,18,-29,-14,-15,-16,18,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,18,-26,-18,-19,-20,-23,18,18,-17,18,18,18,-22,-21,-25,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,19,-29,-14,-15,-16,19,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,19,-26,-18,-19,-20,-23,19,19,-17,19,19,19,-22,-21,-25,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,38,41,42,43,44,48,53,61,62,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,90,91,92,94,98,102,104,106,108,109,110,112,113,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,20,-29,-14,-15,-16,20,-40,-41,-49,-24,-28,-57,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,20,-26,-18,-19,-20,-23,20,20,-17,20,20,20,-22,-21,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,41,42,43,44,61,62,65,68,70,75,76,77,78,79,80,81,82,85,90,91,92,94,104,108,110,112,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,-29,-14,-15,-16,-41,-49,-24,-28,-57,-42,-43,-44,-45,-46,-47,-48,-50,-26,-18,-19,-20,-23,-17,-27,-22,-21,]),'ELIF':([3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,41,42,43,44,61,62,65,68,70,75,76,77,78,79,80,81,82,85,90,91,92,94,104,108,110,112,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,-29,-14,-15,-16,-41,-49,-24,-28,93,-42,-43,-44,-45,-46,-47,-48,-50,-26,-18,99,-20,-23,-17,-27,-22,-21,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,20,21,31,32,33,34,35,36,41,42,43,44,61,62,65,68,70,75,76,77,78,79,80,81,82,85,90,91,92,94,104,108,110,112,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-51,-52,-53,-54,-55,-56,-29,-14,-15,-16,-41,-49,-24,-28,-57,-42,-43,-44,-45,-46,-47,-48,-50,-26,98,-19,-20,-23,-17,-27,-22,-21,]),'ASSIGN':([13,],[22,]),'PLUSEQUALS':([13,],[23,]),'MINUSEQUALS':([13,],[24,]),'LPAREN':([13,14,16,17,19,22,23,24,25,28,29,30,39,40,49,50,51,52,54,55,56,57,58,59,60,69,84,93,95,99,107,],[25,30,30,39,30,30,30,30,30,30,30,30,30,67,30,30,30,30,30,30,30,30,30,30,30,30,95,30,30,30,30,]),'MINUS':([14,16,19,22,23,24,25,27,28,29,30,31,32,33,34,35,36,39,41,42,43,44,46,49,50,51,52,54,55,56,57,58,59,60,61,62,63,66,69,71,72,73,74,75,76,77,78,79,80,81,82,89,93,95,99,101,107,111,],[28,28,28,28,28,28,28,55,28,28,28,-51,-52,-53,-54,-55,-56,28,55,55,55,55,55,28,28,28,28,28,28,28,28,28,28,28,-41,55,55,55,28,55,55,55,55,-42,-43,-44,-45,-46,55,55,-50,55,28,28,28,55,28,55,]),'NOT':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FALSE':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NUMBER':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FLOAT':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'STRING':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'RPAREN':([25,31,32,33,34,35,36,45,46,47,61,62,63,66,67,75,76,77,78,79,80,81,82,86,87,88,89,103,111,],[-57,-51,-52,-53,-54,-55,-56,68,-34,-35,-41,-49,82,85,-57,-42,-43,-44,-45,-46,-47,-48,-50,-31,96,-32,-33,-30,113,]),'COMMA':([25,31,32,33,34,35,36,45,46,47,61,62,67,75,76,77,78,79,80,81,82,86,87,88,89,101,103,],[-57,-51,-52,-53,-54,-55,-56,69,-34,-35,-41,-49,-57,-42,-43,-44,-45,-46,-47,-48,-50,-31,97,-32,-33,107,-30,]),'COLON':([26,31,32,33,34,35,36,53,61,62,71,72,73,74,75,76,77,78,79,80,81,82,96,100,105,],[48,-51,-52,-53,-54,-55,-56,-40,-41,-49,-36,-37,-38,-39,-42,-43,-44,-45,-46,-47,-48,-50,102,106,109,]),'EQUALS':([27,31,32,33,34,35,36,61,62,75,76,77,78,79,80,81,82,],[49,-51,-52,-53,-54,-55,-56,-41,-49,-42,-43,-44,-45,-46,-47,-48,-50,]),'LT':([27,31,32,33,34,35,36,61,62,75,76,77,78,79,80,81,82,],[50,-51,-52,-53,-54,-55,-56,-41,-49,-42,-43,-44,-45,-46,-47,-48,-50,]),'GT':([27,31,32,33,34,35,36,61,62,75,76,77,78,79,80,81,82,],[51,-51,-52,-53,-54,-55,-56,-41,-49,-42,-43,-44,-45,-46,-47,-48,-50,]),'LE':([27,31,32,33,34,35,36,61,62,75,76,77,78,79,80,81,82,],[52,-51,-52,-53,-54,-55,-56,-41,-49,-42,-43,-44,-45,-46,-47,-48,-50,]),'GE':([27,31,32,33,34,35,36,61,62,75,76,77,78,79,80,81,82,],[53,-51,-52,-53,-54,-55,-56,-41,-49,-42,-43,-44,-45,-46,-47,-48,-50,]),'PLUS':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[54,-51,-52,-53,-54,-55,-56,54,54,54,54,54,-41,54,54,54,54,54,54,54,-42,-43,-44,-45,-46,54,54,-50,54,54,54,]),'MULTIPLY':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[56,-51,-52,-53,-54,-55,-56,56,56,56,56,56,-41,56,56,56,56,56,56,56,56,56,-44,-45,-46,56,56,-50,56,56,56,]),'DIVIDE':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[57,-51,-52,-53,-54,-55,-56,57,57,57,57,57,-41,57,57,57,57,57,57,57,57,57,-44,-45,-46,57,57,-50,57,57,57,]),'MODULO':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[58,-51,-52,-53,-54,-55,-56,58,58,58,58,58,-41,58,58,58,58,58,58,58,58,58,-44,-45,-46,58,58,-50,58,58,58,]),'OR':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[59,-51,-52,-53,-54,-55,-56,59,59,59,59,59,-41,-49,59,59,59,59,59,59,-42,-43,-44,-45,-46,-47,-48,-50,59,59,59,]),'AND':([27,31,32,33,34,35,36,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,82,89,101,111,],[60,-51,-52,-53,-54,-55,-56,60,60,60,60,60,-41,-49,60,60,60,60,60,60,-42,-43,-44,-45,-46,60,-48,-50,60,60,60,]),'IN':([37,],[64,]),'RANGE':([64,],[84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,102,],[2,108,]),'statement':([0,2,38,48,83,98,102,106,108,109,],[3,21,65,70,94,104,3,110,21,112,]),'assignment':([0,2,38,48,83,98,102,106,108,109,],[4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,2,38,48,83,98,102,106,108,109,],[5,5,5,5,5,5,5,5,5,5,]),'for_statement':([0,2,38,48,83,98,102,106,108,109,],[6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,38,48,83,98,102,106,108,109,],[7,7,7,7,7,7,7,7,7,7,]),'print_statement':([0,2,38,48,83,98,102,106,108,109,],[8,8,8,8,8,8,8,8,8,8,]),'function_def':([0,2,38,48,83,98,102,106,108,109,],[9,9,9,9,9,9,9,9,9,9,]),'function_call':([0,2,38,48,83,98,102,106,108,109,],[10,10,10,10,10,10,10,10,10,10,]),'return_statement':([0,2,38,48,83,98,102,106,108,109,],[11,11,11,11,11,11,11,11,11,11,]),'break_statement':([0,2,38,48,83,98,102,106,108,109,],[12,12,12,12,12,12,12,12,12,12,]),'condition':([14,16,93,99,],[26,38,100,105,]),'expression':([14,16,19,22,23,24,25,28,29,30,39,49,50,51,52,54,55,56,57,58,59,60,69,93,95,99,107,],[27,27,41,42,43,44,46,61,62,63,66,71,72,73,74,75,76,77,78,79,80,81,89,27,101,27,111,]),'arg_list':([25,],[45,]),'empty':([25,67,70,],[47,88,92,]),'range':([64,],[83,]),'param_list':([67,],[87,]),'elif_list_opt':([70,],[90,]),'elif_list':([70,],[91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',25),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',31),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',32),
  ('statement -> assignment','statement',1,'p_statement','parser.py',40),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',43),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',44),
  ('statement -> function_def','statement',1,'p_statement','parser.py',45),
  ('statement -> function_call','statement',1,'p_statement','parser.py',46),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',47),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',48),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',53),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',58),
  ('assignment -> ID PLUSEQUALS expression','assignment',3,'p_assignment','parser.py',59),
  ('assignment -> ID MINUSEQUALS expression','assignment',3,'p_assignment','parser.py',60),
  ('if_statement -> IF condition COLON statement elif_list_opt ELSE statement','if_statement',7,'p_if_statement','parser.py',73),
  ('if_statement -> IF condition COLON statement elif_list_opt','if_statement',5,'p_if_statement','parser.py',74),
  ('elif_list_opt -> elif_list','elif_list_opt',1,'p_elif_list_opt','parser.py',88),
  ('elif_list_opt -> empty','elif_list_opt',1,'p_elif_list_opt','parser.py',89),
  ('elif_list -> elif_list ELIF condition COLON statement','elif_list',5,'p_elif_list','parser.py',94),
  ('elif_list -> ELIF condition COLON statement','elif_list',4,'p_elif_list','parser.py',95),
  ('for_statement -> FOR ID IN range statement','for_statement',5,'p_for_statement','parser.py',103),
  ('while_statement -> WHILE condition statement','while_statement',3,'p_while_statement','parser.py',108),
  ('range -> RANGE LPAREN expression COMMA expression RPAREN','range',6,'p_range','parser.py',113),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','parser.py',118),
  ('function_def -> DEF ID LPAREN param_list RPAREN COLON statement_list','function_def',7,'p_function_def','parser.py',123),
  ('function_call -> ID LPAREN arg_list RPAREN','function_call',4,'p_function_call','parser.py',129),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',134),
  ('param_list -> param_list COMMA ID','param_list',3,'p_param_list','parser.py',139),
  ('param_list -> ID','param_list',1,'p_param_list','parser.py',140),
  ('param_list -> empty','param_list',1,'p_param_list','parser.py',141),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',151),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',152),
  ('arg_list -> empty','arg_list',1,'p_arg_list','parser.py',153),
  ('condition -> expression EQUALS expression','condition',3,'p_condition','parser.py',284),
  ('condition -> expression LT expression','condition',3,'p_condition','parser.py',285),
  ('condition -> expression GT expression','condition',3,'p_condition','parser.py',286),
  ('condition -> expression LE expression','condition',3,'p_condition','parser.py',287),
  ('condition -> expression GE','condition',2,'p_condition','parser.py',288),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',304),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',309),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',310),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',311),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',312),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','parser.py',313),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',314),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',315),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',320),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',325),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',330),
  ('expression -> TRUE','expression',1,'p_expression_true','parser.py',335),
  ('expression -> FALSE','expression',1,'p_expression_false','parser.py',340),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',345),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',346),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',351),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',356),
]
