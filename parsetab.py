
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQEQNEleftLTLEGTGEleftPLUSMINUSleftMULTIPLYDIVIDEnonassocLPARENRPARENDIVIDE ELSE END EQEQ EQUALS FLOAT FOR GE GT ID IF LBRACE LE LPAREN LT MINUS MULTIPLY NE NUMBER PLUS RBRACE RPAREN STRING TOstatement_list : statement_list statement\n                      | statementstatement : expressionstatement : ID EQUALS expressionstatement : ID LPAREN ID RPARENstatement : IF expression LBRACE statement_list RBRACEstatement : IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACEstatement : FOR ID EQUALS expression TO expression LBRACE statement_list RBRACEstatement : ENDexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOATexpression : IDexpression : MINUS expression %prec MINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression EQEQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expressionexpression : STRING'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,53,54,55,56,57,58,],[4,4,-2,-3,-13,27,27,29,-9,-11,-12,27,-25,-1,27,27,27,27,27,27,27,27,27,27,27,42,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,4,27,-5,4,-6,27,4,4,4,4,-7,-8,]),'IF':([0,1,2,3,4,8,9,10,12,13,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,46,47,49,53,54,55,56,57,58,],[6,6,-2,-3,-13,-9,-11,-12,-25,-1,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,6,-5,6,-6,6,6,6,6,-7,-8,]),'FOR':([0,1,2,3,4,8,9,10,12,13,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,46,47,49,53,54,55,56,57,58,],[7,7,-2,-3,-13,-9,-11,-12,-25,-1,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,7,-5,7,-6,7,7,7,7,-7,-8,]),'END':([0,1,2,3,4,8,9,10,12,13,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,46,47,49,53,54,55,56,57,58,],[8,8,-2,-3,-13,-9,-11,-12,-25,-1,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,8,-5,8,-6,8,8,8,8,-7,-8,]),'LPAREN':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,53,54,55,56,57,58,],[5,5,-2,-3,25,5,5,-9,-11,-12,5,-25,-1,5,5,5,5,5,5,5,5,5,5,5,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,5,5,-5,5,-6,5,5,5,5,5,-7,-8,]),'NUMBER':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,53,54,55,56,57,58,],[9,9,-2,-3,-13,9,9,-9,-11,-12,9,-25,-1,9,9,9,9,9,9,9,9,9,9,9,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,9,9,-5,9,-6,9,9,9,9,9,-7,-8,]),'FLOAT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,53,54,55,56,57,58,],[10,10,-2,-3,-13,10,10,-9,-11,-12,10,-25,-1,10,10,10,10,10,10,10,10,10,10,10,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,10,10,-5,10,-6,10,10,10,10,10,-7,-8,]),'MINUS':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,],[11,11,-2,15,-13,11,11,-9,-11,-12,11,-25,-1,11,11,11,11,11,11,11,11,11,11,11,15,-13,15,-14,-15,-16,-17,-18,15,15,15,15,15,15,15,-10,11,11,-5,11,15,-6,11,15,11,11,11,11,-7,-8,]),'STRING':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,53,54,55,56,57,58,],[12,12,-2,-3,-13,12,12,-9,-11,-12,12,-25,-1,12,12,12,12,12,12,12,12,12,12,12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,12,12,-5,12,-6,12,12,12,12,12,-7,-8,]),'$end':([1,2,3,4,8,9,10,12,13,27,30,31,32,33,34,35,36,37,38,39,40,41,43,46,49,57,58,],[0,-2,-3,-13,-9,-11,-12,-25,-1,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,-5,-6,-7,-8,]),'RBRACE':([2,3,4,8,9,10,12,13,27,30,31,32,33,34,35,36,37,38,39,40,41,43,46,47,49,55,56,57,58,],[-2,-3,-13,-9,-11,-12,-25,-1,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-4,-10,-5,49,-6,57,58,-7,-8,]),'PLUS':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[14,-13,-11,-12,-25,14,-13,14,-14,-15,-16,-17,-18,14,14,14,14,14,14,14,-10,14,14,]),'MULTIPLY':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[16,-13,-11,-12,-25,16,-13,16,16,16,16,-17,-18,16,16,16,16,16,16,16,-10,16,16,]),'DIVIDE':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[17,-13,-11,-12,-25,17,-13,17,17,17,17,-17,-18,17,17,17,17,17,17,17,-10,17,17,]),'EQEQ':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[18,-13,-11,-12,-25,18,-13,18,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,18,-10,18,18,]),'NE':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[19,-13,-11,-12,-25,19,-13,19,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,19,-10,19,19,]),'LT':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[20,-13,-11,-12,-25,20,-13,20,-14,-15,-16,-17,-18,20,20,-21,-22,-23,-24,20,-10,20,20,]),'GT':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[21,-13,-11,-12,-25,21,-13,21,-14,-15,-16,-17,-18,21,21,-21,-22,-23,-24,21,-10,21,21,]),'LE':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[22,-13,-11,-12,-25,22,-13,22,-14,-15,-16,-17,-18,22,22,-21,-22,-23,-24,22,-10,22,22,]),'GE':([3,4,9,10,12,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,48,52,],[23,-13,-11,-12,-25,23,-13,23,-14,-15,-16,-17,-18,23,23,-21,-22,-23,-24,23,-10,23,23,]),'EQUALS':([4,29,],[24,45,]),'RPAREN':([9,10,12,26,27,30,31,32,33,34,35,36,37,38,39,40,42,43,],[-11,-12,-25,43,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,46,-10,]),'LBRACE':([9,10,12,27,28,30,31,32,33,34,35,36,37,38,39,40,43,51,52,],[-11,-12,-25,-13,44,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,53,54,]),'TO':([9,10,12,27,30,31,32,33,34,35,36,37,38,39,40,43,48,],[-11,-12,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-10,50,]),'ELSE':([49,],[51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,44,53,54,],[1,47,55,56,]),'statement':([0,1,44,47,53,54,55,56,],[2,13,2,13,2,2,13,13,]),'expression':([0,1,5,6,11,14,15,16,17,18,19,20,21,22,23,24,44,45,47,50,53,54,55,56,],[3,3,26,28,30,31,32,33,34,35,36,37,38,39,40,41,3,48,3,52,3,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',17),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',24),
  ('statement -> ID EQUALS expression','statement',3,'p_statement_assign','parser.py',32),
  ('statement -> ID LPAREN ID RPAREN','statement',4,'p_statement_print','parser.py',40),
  ('statement -> IF expression LBRACE statement_list RBRACE','statement',5,'p_statement_if','parser.py',46),
  ('statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','statement',9,'p_statement_if_else','parser.py',53),
  ('statement -> FOR ID EQUALS expression TO expression LBRACE statement_list RBRACE','statement',9,'p_statement_for','parser.py',63),
  ('statement -> END','statement',1,'p_statement_end','parser.py',74),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parser.py',79),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',83),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',84),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',88),
  ('expression -> MINUS expression','expression',2,'p_expression_neg','parser.py',96),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',100),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',101),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','parser.py',102),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',103),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_binop','parser.py',104),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',105),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',106),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',107),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',108),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',109),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',158),
]
